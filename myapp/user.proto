syntax = "proto3";

package myapp;

import "myapp/errors.proto";
import "myapp/authz.proto";
import "google/api/annotations.proto";
import "google/type/date.proto";
import "google/protobuf/empty.proto";

message User {
  uint64 id = 1;
  string first_name = 2;
  string family_name = 3;
  Sex sex = 4;
  uint32 age = 5 [ deprecated = true ];
  google.type.Date birthday = 6;

  enum Sex {
    SEX_UNKNOWN = 0;
    SEX_MALE = 1;
    SEX_FEMALE = 2;
    SEX_OTHER = 3;
  }
}

message UserList { repeated User users = 1; }

service UserService {
  option deprecated = false;
  option (authz) = {
    require : true
    description : "ユーザー自身か、adminの権限で操作する必要があります"
  };

  rpc Get(GetRequest) returns (User) {
    option deprecated = false;
    option idempotency_level = NO_SIDE_EFFECTS;
    option (google.api.http) = {
      get : "user/{id}"
    };
    option (error) = {
      code : INVALID_ARGUMENT
      case : "idの形式がおかしいとき発生します"
      details : "LocalizedMessage"
      details : "BadRequest"
    };
    option (error) = {
      code : NOT_FOUND
      case : "指定されたidのユーザーがいない場合に発生します"
      details : "LocalizedMessage"
    };
    option (error) = {
      code : PERMISSION_DENIED
      case : "指定されたidのユーザー本人でないコンテキストでリクエストした場合"
             "に発生します"
      details : "LocalizedMessage"
    };
  }

  rpc List(google.protobuf.Empty) returns (UserList) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (google.api.http) = {
      get : "users"
    };
  }
}

message GetRequest { uint64 id = 1; }
